{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/Context.kt",
      "language": "kotlin",
      "line": 23,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 21,
        "length": 6,
        "offset": 89,
        "surroundingCode": "data class Screen(var scope: WindowScope? = null, var pdtm: PlatformDropTargetModifier)\n\nactual object Context {\n  var secondaryPlugins: List<SecondaryPlugin> = emptyList()\n  lateinit var platform: Platform"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "927ee75dc4ac30681b2597be196dbb7b6e3db8cb51a2c28151468de0738fbe05"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 27,
        "surroundingCode": "\nactual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9e72f018d437ed431475ad35abff22759391a0b5321f16358199ffba7b1c5004"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 129,
        "surroundingCode": "actual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())\n\n  companion object {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2d4cc35b7b994245d24b173895445137948aa8aa1d1e9d8d9b2e3acd2fa797ca"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 12,
        "length": 6,
        "offset": 32,
        "surroundingCode": "import java.util.regex.Pattern\n\nactual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3b17f59a79779630e93d26f34c82a7825fe9f3d5c6b6e1511bbd7243e276e03a"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3e9ba6e04f2261c0d7dc595f3fd309eafa08f4b990d0e2e19fecbae0ccf4f064"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2da2654e8c04545949d0f79acc55c2d079bb2fd292892f5aa88218cfeb6f97ef"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 19,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9985c5f5874e75acdfc9e9b9b03baddb8bf0bfd52c7832d9d7b4c2400472096f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 27,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 25,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "306a0b922554bbd5416c3b5165dcd83b87a60286cb32557c8c42587a8d62b234"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Coroutines.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 48,
        "surroundingCode": "import kotlin.coroutines.EmptyCoroutineContext\n\nexpect fun <T> runBlocking(\n  context: CoroutineContext = EmptyCoroutineContext,\n  block: suspend CoroutineScope.() -> T,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "10de4b6565290d708b44db3e5d8b8d6ed9587ecc7ec1a32bc392da622c942662"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/impl/ui/widget/md/parser/Parser.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 37,
        "surroundingCode": "import kotlinx.coroutines.flow.Flow\n\nexpect fun parseMarkdownContent(string: String): Flow<Element>\n\nopen class Parser : AbstractParser {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e36a5e28347981714d7c065405196214aa8fb4464e782f754a9f9511474dd38c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/model/onnet/Descriptor.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 58,
        "surroundingCode": "package xyz.mcxross.cohesive.common.frontend.model.onnet\n\nexpect fun getDescriptor(): String\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9260c47919a539be7e0660489ce4a4a9f79e1b8c03c8f51832606c9b725634ba"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/Context.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 37,
        "surroundingCode": "package xyz.mcxross.cohesive.common\n\nexpect object Context\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "75dbba2975358a2e7d35d2d8d689b9a1964ea0a76a365eaeaa7eb20488fe8d20"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/IO.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 52,
        "surroundingCode": "package xyz.mcxross.cohesive.common.frontend.utils\n\nexpect fun readFileToStr(path: String): String\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2a66f87e73f9584582e82454570e68bc251d833d18c4fbd9572c5a66bc83c0a7"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Resources.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun Font(\n  name: String,\n  res: String,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "bdd19eeed708597648155c331e84c39cf5453d93e1b7ff166d3fa196d9bf3a7c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/DropTarget.kt",
      "language": "kotlin",
      "line": 59,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 57,
        "length": 6,
        "offset": 5,
        "surroundingCode": "  )\n\nexpect class PlatformDropTargetModifier : DropTargetModifier\n\nfun Modifier.dropTarget("
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "bbaec225e7ecfa17d58e9b03eb559161df33eda3348b2d6420154b071327e577"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 44,
        "surroundingCode": "import androidx.compose.ui.geometry.Offset\n\nexpect fun Modifier.pointerMoveFilter(\n  onEnter: () -> Boolean = { true },\n  onExit: () -> Boolean = { true },"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "808d62cc14e24611bfb83c5691fa4f0aabad12d2d154c00040ceff5d24939789"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 13,
        "surroundingCode": "): Modifier\n\nexpect fun Modifier.cursorForHorizontalResize(): Modifier\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1738049c2c4821f148b0fe88050580246b3130faf1eaea94553cf42b98685eff"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/IO.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 15,
        "length": 6,
        "offset": 37,
        "surroundingCode": "import java.util.zip.ZipInputStream\n\nactual fun readFileToStr(\n  path: String,\n): String {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "50da3b6b85e445d9dd40eff75b2a6823752e125ad4cf17c5985b5a10cf8ea500"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Uri.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nexpect class UriConverter() {\n  fun toInput(uri: Uri): Input\n  suspend fun name(uri: Uri): String"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "25b9bd3411fd2efa97f80ba0b3029cb7dc455e8c4a0d8982afed754d6b991df8"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 16,
        "length": 6,
        "offset": 91,
        "surroundingCode": "): Modifier = this.pointerMoveFilter(onEnter = onEnter, onExit = onExit, onMove = onMove)\n\nactual fun Modifier.cursorForHorizontalResize(): Modifier =\n  this.pointerHoverIcon(PointerIcon(Cursor(Cursor.E_RESIZE_CURSOR)))\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e76b4cd758518fb0f6b049947a4ce6dd87e0cf5daaf33e3d44fae4947101224d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 41,
        "surroundingCode": "\n@OptIn(ExperimentalComposeUiApi::class)\nactual fun Modifier.pointerMoveFilter(\n  onEnter: () -> Boolean,\n  onExit: () -> Boolean,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "116b9ea20af141f956366d20b9c06c2f36a3d9a496b79ae97fd89b8a262d7d59"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/File.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 42,
        "surroundingCode": "import kotlinx.coroutines.CoroutineScope\n\nexpect val HomeFolder: File\n\ninterface File {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3a2902b52431e396ee7033cb6a05ec3dc46f9b4ac61ef9f6374a43f8edb93f2d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Coroutines.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 43,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\n\nactual fun <T> runBlocking(\n  context: CoroutineContext,\n  block: suspend CoroutineScope.() -> T,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "0b73ff58f9425e2a4780690f7a2119814675ae8544a9b7c82698f9fed611d38e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 18,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "ba66160c88f2ed218b7e5721bf38400ed380f6f14e98a5b0530e7811afebc0ff"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 36,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "c607ca046c5cc3a88fae58170b95aa88226c2e204a2a52912530de30fc40e525"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 45,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e05c9641be3b5c73626b976c8296fa97ce45cb26a218a41a235d2d5814b38eca"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 9,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "877dde98df13fdb4d12164c224fd878d2d564273bba477a8552311a281b67768"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/impl/ui/Screen.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 54,
        "surroundingCode": "package xyz.mcxross.cohesive.common.frontend.impl.ui\n\nexpect fun getScreenSize(): Pair<Int, Int>\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "ff35a18c15d2aac090afe88c24dd6ddc7d875c34ec7d5ee3cf2de46876937e2e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/model/onnet/Descriptor.kt",
      "language": "kotlin",
      "line": 72,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 70,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nactual fun getDescriptor(): String {\n\n  return runBlocking {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1f645a879c3166eb5b1a027f95d1ecd79466eb8ab2c6eb207f292b0a25921a13"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Editor.kt",
      "language": "kotlin",
      "line": 163,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 161,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun TextField(\n  text: String,\n  isCode: Boolean,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "adb9354856ec07708f3f2bd36df74eec5d33e8dd967eb797bcc900bd04995f04"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/mellow/Editor.kt",
      "language": "kotlin",
      "line": 120,
      "offset": 10,
      "length": 6,
      "code": {
        "startLine": 118,
        "length": 6,
        "offset": 22,
        "surroundingCode": "\n@Composable\ninternal expect fun EditorMap(\n    textLines: TextLines,\n    fontSize: TextUnit,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "aabe7d47c9e2bb734ce9fd8a2144cfc8ef061386226bb6bfe730c3906d44f552"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 34,
        "surroundingCode": "import java.util.logging.Handler\n\nexpect class DebugAntilog(defaultTag: String = \"Cohesive\", handler: List<Handler> = listOf()) :\n  Antilog {\n  constructor(defaultTag: String)"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "d0894751f886fcd0104018371eb17d160ff05e239eeb67470af25f335315aa92"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Network.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 20,
        "length": 6,
        "offset": 36,
        "surroundingCode": "val ktorHttpClient = HttpClient {}\n\nactual fun isInternetAvailable(): Boolean {\n  return runBlocking {\n    try {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "33644388438569024d196ab8f142a79eea8a964a2b1405d47bc008636fb93243"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Network.kt",
      "language": "kotlin",
      "line": 34,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 32,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nactual fun getHTTPClient(): HttpClient = HttpClient(CIO) {\n  install(UserAgent) {\n    agent = \"Cohesive\""
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e0af55deaeb65e78e6504f580de945917c9a19c9b82160cf6248f3ca3d870a60"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/impl/ui/Screen.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 25,
        "surroundingCode": "import java.awt.Toolkit\n\nactual fun getScreenSize(): Pair<Int, Int> {\n  val toolkit = Toolkit.getDefaultToolkit()\n  val screenSize = toolkit.screenSize"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2ba2f4685588d7777e492d42d1d1bdd00cc8b5b82b2d12da620acccd51c26361"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/PlatformModifiers.kt",
      "language": "kotlin",
      "line": 66,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 64,
        "length": 6,
        "offset": 30,
        "surroundingCode": "/* Original author, tunjid*/\n\nactual class PlatformDropTargetModifier(\n  density: Float,\n  window: ComposeWindow,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f952461e334382aae9754dbf8b70b7f1f41719f2e7acc9c908623d7c7b06df95"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 41,
        "surroundingCode": "import xyz.mcxross.cohesive.mellow.File\n\nactual val HomeFolder: File\n    get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f978c3efde70f42e0cd2241e93c52fc8a929163b8f403002077934313c679087"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: TODO",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 13,
      "length": 4,
      "code": {
        "startLine": 4,
        "length": 4,
        "offset": 41,
        "surroundingCode": "\nactual val HomeFolder: File\n    get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f8311c184a7bfdb67f1744e868248bcd96a82052840163df563fdb39148afc1b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 31,
        "surroundingCode": "\nactual class UriConverter {\n  actual fun toInput(uri: Uri): Input = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")\n    else -> File(uri.path).inputStream().asInput()"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "7e54c37219668d4e57143e8e1676a75cd13a1f15eb1a2f14e081bdd9d1d8acdf"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 12,
        "length": 6,
        "offset": 7,
        "surroundingCode": "  }\n\n  actual suspend fun name(uri: Uri): String = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")\n    else -> File(uri.path).name"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "2bd320d28eca9b4d99dcf448bdcf802e69b75200c8269ca39762ec3b1e7056f9"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 28,
        "surroundingCode": "import java.nio.file.Files\n\nactual class UriConverter {\n  actual fun toInput(uri: Uri): Input = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9b636a04639dcc6f4597908129e2e1f81adfad01cb4983f281199c261f1ec853"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Resources.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun Font(name: String, res: String, weight: FontWeight, style: FontStyle): Font =\n  androidx.compose.ui.text.platform.Font(\"font/$res.ttf\", weight, style)\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "c8cc9a854c9b2d6388a145f2d42884a03357a4b7362961ce940c7bd967961c82"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/File.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 53,
        "surroundingCode": "import xyz.mcxross.cohesive.extension.toProjectFile\n\nactual val HomeFolder: File\n  get() = java.io.File(System.getProperty(\"user.home\")).toProjectFile()\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "188a3074ce484ff9569f4d29fc8f51caa06929a12a7f35a752674c9253a16721"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/common/frontend/impl/ui/widget/md/parser/Parser.kt",
      "language": "kotlin",
      "line": 24,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 22,
        "length": 6,
        "offset": 39,
        "surroundingCode": "import kotlinx.coroutines.withContext\n\nactual fun parseMarkdownContent(string: String): Flow<Element> = flow {\n  if (string.isEmpty()) {\n    throw MarkdownException()"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "4c900df3348b5e182e3f4ba3f0e4b81f849ba3470896972663ba5f37ca201e7b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/mellow/Editor.kt",
      "language": "kotlin",
      "line": 25,
      "offset": 10,
      "length": 6,
      "code": {
        "startLine": 23,
        "length": 6,
        "offset": 22,
        "surroundingCode": "\n@Composable\ninternal actual fun EditorMap(\n  textLines: TextLines,\n  fontSize: TextUnit,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "5a309b5d4e84279383250c1adb72059b91639de7d99a9e4f646fdda0b15bcd82"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Network.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 25,
        "surroundingCode": "import io.ktor.client.*\n\nexpect fun isInternetAvailable(): Boolean\nexpect fun getHTTPClient(): HttpClient\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "636c70038aecfabc443f4df28299d3171b88087550d3a5996ac72c4e2d6448af"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/common/frontend/utils/Network.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 43,
        "surroundingCode": "\nexpect fun isInternetAvailable(): Boolean\nexpect fun getHTTPClient(): HttpClient\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "07ee628aada22bf8f3e8aaa9366b039f8356b1a5cadba273513157635c18b7dc"
}]}