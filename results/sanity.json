{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/ui/impl/view/md/parser/Parser.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 37,
        "surroundingCode": "import kotlinx.coroutines.flow.Flow\n\nexpect fun parseMarkdownContent(string: String): Flow<Element>\n\nopen class Parser : AbstractParser {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "38404550ecfe12f4aa42e9f6489ca37f581c269a6fbcc1c7b3a625f27ce6eb03"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/File.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 42,
        "surroundingCode": "import kotlinx.coroutines.CoroutineScope\n\nexpect val HomeFolder: File\n\ninterface File {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "83245cb6c5bfc59201aac6d57d70a25f56279d54548b5971b31956667f32e820"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 44,
        "surroundingCode": "import androidx.compose.ui.geometry.Offset\n\nexpect fun Modifier.pointerMoveFilter(\n  onEnter: () -> Boolean = { true },\n  onExit: () -> Boolean = { true },"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "128b2c0a0175fb625c9fa3904da45826da9f28946bd11438b474750b5a5aa16c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 13,
        "surroundingCode": "): Modifier\n\nexpect fun Modifier.cursorForHorizontalResize(): Modifier\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1fe25af26419d3b8cd93d48aa6b2ce665c08b49ef1c8d5925c749c68c5e4b115"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "037ef27dfb0edd487536f8efc1d0fee3136eddf8b471fe09bda8a86fb73207c7"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "531eacc47d17faf5ea2164960881f00e1c4cebf1d2cd879518e9cacbf6fb786b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 19,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "6b2da064fea52bedb878c2461b7bdb58a9e2609caeb0e9c4cc4e35ece756f399"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 27,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 25,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "ae6a6909f3627b779677b07831037fd6964a5413918fa54e5e89122fb82bfb3c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/Screen.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 36,
        "surroundingCode": "package xyz.mcxross.cohesive.utils\n\nexpect fun getScreenSize(): Pair<Int, Int>\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "771d2b4ee6a86be052dc45bc648556582ac0ae2d4c4dc676b3f00c69e4ab7353"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 34,
        "surroundingCode": "import java.util.logging.Handler\n\nexpect class DebugAntilog(defaultTag: String = \"Cohesive\", handler: List<Handler> = listOf()) :\n  Antilog {\n  constructor(defaultTag: String)"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "40429aa650b6b54d0421a7b825a6f0e13856315ef62ffa47a1491d84999f427e"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/cps/Descriptor.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 34,
        "surroundingCode": "package xyz.mcxross.cohesive.cps\n\nexpect fun getDescriptor(): String\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "49ff073a60a6b5275001d948eb0372567cd6c647acd9203fefbaba1e6936ab18"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Uri.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nexpect class UriConverter() {\n  fun toInput(uri: Uri): Input\n  suspend fun name(uri: Uri): String"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "3702520b62fc38a2613eba8c1265e25173c407ad1b5d8b2037a470716dae08f5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Editor.kt",
      "language": "kotlin",
      "line": 163,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 161,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun TextField(\n  text: String,\n  isCode: Boolean,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "0ee0379baef2917d6262a7be9c89616c205fa70c587729196488872b3a0fa31d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Editor.kt",
      "language": "kotlin",
      "line": 120,
      "offset": 10,
      "length": 6,
      "code": {
        "startLine": 118,
        "length": 6,
        "offset": 22,
        "surroundingCode": "\n@Composable\ninternal expect fun EditorMap(\n    textLines: TextLines,\n    fontSize: TextUnit,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "303bd45d53314f18cf9b4ba5b302c170ffa93fca4f1eb216c3119f2eed2f2e27"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/Coroutines.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 48,
        "surroundingCode": "import kotlin.coroutines.EmptyCoroutineContext\n\nexpect fun <T> runBlocking(\n  context: CoroutineContext = EmptyCoroutineContext,\n  block: suspend CoroutineScope.() -> T,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e457af653d7329bcdd83bd8e9bf3af54cf534ad89b9c3b2e6928ee6d1bbfcf45"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/Network.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 25,
        "surroundingCode": "import io.ktor.client.*\n\nexpect fun isInternetAvailable(): Boolean\nexpect fun getHTTPClient(): HttpClient\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "b4afcf37e57346f6bc474a26f614eec547f1da660b4cd0a2aeb714e5f7d306f8"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/Network.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 43,
        "surroundingCode": "\nexpect fun isInternetAvailable(): Boolean\nexpect fun getHTTPClient(): HttpClient\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "888244458a9a57abf4ba7b3a19a0999d5c784f852baf706cfb3c38b74363f31b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/Coroutines.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 4,
        "length": 6,
        "offset": 43,
        "surroundingCode": "import kotlin.coroutines.CoroutineContext\n\nactual fun <T> runBlocking(\n  context: CoroutineContext,\n  block: suspend CoroutineScope.() -> T,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "d62e768dbb14a1b348f0290c7b1fd819624ea29ab7da386f11545900b8dbfb95"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 13,
        "length": 6,
        "offset": 27,
        "surroundingCode": "\nactual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "dae0aec870a42f23a33865cb2b1fbf3bb7798c16d963853aaef5bbb62c126b41"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 12,
        "length": 6,
        "offset": 32,
        "surroundingCode": "import java.util.regex.Pattern\n\nactual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "00600d683331ea9b94d352c7b48fc64bba2134b1752173ba505cd61379ab6a22"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/DebugAntilog.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 14,
        "length": 6,
        "offset": 129,
        "surroundingCode": "actual class DebugAntilog\nactual constructor(private val defaultTag: String, private val handler: List<Handler>) : Antilog() {\n  actual constructor(defaultTag: String) : this(defaultTag, handler = listOf())\n\n  companion object {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "07f97bd60a44c6c854fbf71d3062b8b2bfd01285ee8471d32906b3c109e3b140"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/File.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 5,
        "length": 6,
        "offset": 53,
        "surroundingCode": "import xyz.mcxross.cohesive.extension.toProjectFile\n\nactual val HomeFolder: File\n  get() = java.io.File(System.getProperty(\"user.home\")).toProjectFile()\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "b05884d33ce276a404f28f978f3d6cf1eebc7040113fa6fd92d5e8684d868a30"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/PlatformModifiers.kt",
      "language": "kotlin",
      "line": 66,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 64,
        "length": 6,
        "offset": 30,
        "surroundingCode": "/* Original author, tunjid*/\n\nactual class PlatformDropTargetModifier(\n  density: Float,\n  window: ComposeWindow,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "afab80e5204223b79d823ec97e7bea5b65e3a81f3b3e75d38575cd7633e99707"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/Screen.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 25,
        "surroundingCode": "import java.awt.Toolkit\n\nactual fun getScreenSize(): Pair<Int, Int> {\n  val toolkit = Toolkit.getDefaultToolkit()\n  val screenSize = toolkit.screenSize"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "562fb1470f3054af44d9a52dfd6f72135d27b5109162c6265eba93e106c9a834"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/state/Context.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 8,
        "length": 6,
        "offset": 49,
        "surroundingCode": "import xyz.mcxross.cohesive.cps.SecondaryPlugin\n\nactual object Context {\n  var secondaryPlugins: List<SecondaryPlugin> = emptyList()\n  lateinit var platform: Platform"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1d222834182d61cf7c7e29216c2275ae11ba93a288c47938130627bfb8b4f038"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Editor.kt",
      "language": "kotlin",
      "line": 109,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 107,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun TextField(\n  text: String,\n  isCode: Boolean,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "0a10176b9208c0416727aefd87e1ba9ccbac8c5acf81dd03a984ecde34368d45"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Editor.kt",
      "language": "kotlin",
      "line": 25,
      "offset": 10,
      "length": 6,
      "code": {
        "startLine": 23,
        "length": 6,
        "offset": 22,
        "surroundingCode": "\n@Composable\ninternal actual fun EditorMap(\n  textLines: TextLines,\n  fontSize: TextUnit,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8ea4fbc595e4547c8e284f8581943527e8f11852f2059c830b18162edf8f378b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/Network.kt",
      "language": "kotlin",
      "line": 22,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 20,
        "length": 6,
        "offset": 36,
        "surroundingCode": "val ktorHttpClient = HttpClient {}\n\nactual fun isInternetAvailable(): Boolean {\n  return runBlocking {\n    try {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8d87ef3de89fa3b8d31b72e0146597c7baafdfce5911ee6edc2b3ffa516b022b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/Network.kt",
      "language": "kotlin",
      "line": 34,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 32,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nactual fun getHTTPClient(): HttpClient = HttpClient(CIO) {\n  install(UserAgent) {\n    agent = \"Cohesive\""
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f6379abe6d67ff6f71b8b8206e1c1bd5efb4b4ada03b1fe42e19d6fc550cf3d6"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 16,
        "length": 6,
        "offset": 91,
        "surroundingCode": "): Modifier = this.pointerMoveFilter(onEnter = onEnter, onExit = onExit, onMove = onMove)\n\nactual fun Modifier.cursorForHorizontalResize(): Modifier =\n  this.pointerHoverIcon(PointerIcon(Cursor(Cursor.E_RESIZE_CURSOR)))\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8118002fa3b24a9ffd94bccddb8b84ba347f27618ad3c7e7627c4353b8bf5933"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Mouse.kt",
      "language": "kotlin",
      "line": 12,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 10,
        "length": 6,
        "offset": 41,
        "surroundingCode": "\n@OptIn(ExperimentalComposeUiApi::class)\nactual fun Modifier.pointerMoveFilter(\n  onEnter: () -> Boolean,\n  onExit: () -> Boolean,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "406d4c8f99d7656bb9315c14eb98fb41d40fbfa9b91162e03c2d6ef28d109443"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 8,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 6,
        "length": 6,
        "offset": 28,
        "surroundingCode": "import java.nio.file.Files\n\nactual class UriConverter {\n  actual fun toInput(uri: Uri): Input = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1971de6d59ee3a1a2684838282074c22c26ebd7c565d708de0c98f2b97fc567c"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 31,
        "surroundingCode": "\nactual class UriConverter {\n  actual fun toInput(uri: Uri): Input = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")\n    else -> File(uri.path).inputStream().asInput()"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "8221e576f60b269bb70ad2715d4d895efec36b3c76b9308b799f259756727467"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/UriConverter.kt",
      "language": "kotlin",
      "line": 14,
      "offset": 3,
      "length": 6,
      "code": {
        "startLine": 12,
        "length": 6,
        "offset": 7,
        "surroundingCode": "  }\n\n  actual suspend fun name(uri: Uri): String = when {\n    uri.path.startsWith(\"http\") -> TODO(\"unimplemented\")\n    else -> File(uri.path).name"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9a761b58963d5cd78abd23d73bf682107a7d7c4386cabab8dc17412f3dde7f82"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/DropTarget.kt",
      "language": "kotlin",
      "line": 59,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 57,
        "length": 6,
        "offset": 5,
        "surroundingCode": "  )\n\nexpect class PlatformDropTargetModifier : DropTargetModifier\n\nfun Modifier.dropTarget("
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "5d8c891bb70ca82d2d9d46396db159f85647b23cf2659c8ccbf9727583cf70db"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 3,
        "length": 6,
        "offset": 41,
        "surroundingCode": "import xyz.mcxross.cohesive.mellow.File\n\nactual val HomeFolder: File\n    get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f978c3efde70f42e0cd2241e93c52fc8a929163b8f403002077934313c679087"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: File",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 5,
      "offset": 24,
      "length": 4,
      "code": {
        "startLine": 3,
        "length": 4,
        "offset": 64,
        "surroundingCode": "import xyz.mcxross.cohesive.mellow.File\n\nactual val HomeFolder: File\n    get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "30474c2bb4bacbc921dd8d0db9bff6bc9d02f9dc18c32b7e6e1c6ee47968c872"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: TODO",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 6,
      "offset": 13,
      "length": 4,
      "code": {
        "startLine": 4,
        "length": 4,
        "offset": 41,
        "surroundingCode": "\nactual val HomeFolder: File\n    get() = TODO(\"Not yet implemented\")\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f8311c184a7bfdb67f1744e868248bcd96a82052840163df563fdb39148afc1b"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "Unresolved reference: mellow",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/androidAndroidTestRelease/kotlin/xyz.mcxross.cohesive.common.editor.platform/HomeFolder.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 29,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 81,
        "surroundingCode": "package xyz.mcxross.cohesive.common.editor.platform\n\nimport xyz.mcxross.cohesive.mellow.File\n\nactual val HomeFolder: File"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.androidAndroidTestRelease",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "ac884ce029ddbf71b03ac8067fa7e3c71907e3758bcf5330c327d751f9b8f7fc"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Resources.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nexpect fun Font(\n  name: String,\n  res: String,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "1c2e7ac7a73be537b785da1705b459d9971eff7137a81f1ab9dc1534b9d36c84"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/state/Context.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 36,
        "surroundingCode": "package xyz.mcxross.cohesive.state\n\nexpect object Context\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "f6ef4c6257ff823ab7dfc886e88ca82e4395205481a5f83bb4df1bdaa17e50cf"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/utils/IO.kt",
      "language": "kotlin",
      "line": 17,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 15,
        "length": 6,
        "offset": 37,
        "surroundingCode": "import java.util.zip.ZipInputStream\n\nactual fun readFileToStr(\n  path: String,\n): String {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "a46bddba326bb9a666b2b9ab96348debd0538cdca631770389ed8c5af527aa1d"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 36,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "cb053ba652612430ef240d33746ad9244b0f32d87267d4e7fa74e9f5af82515f"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 20,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 18,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e3fe9fc08c224526044f4b09e28665b33e440580bfd3d9e5f5f726a97eac1cc5"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 11,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 9,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n  modifier: Modifier,\n  scrollState: ScrollState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "9e30f4da00bc4618e17a826b9c4d82019108470203e740f606a15aee312d3819"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Scrollbar.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 45,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun HorizontalScrollbar(\n  modifier: Modifier,\n  scrollState: LazyListState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e38dd0de56108c3b46ee7507dc069e22acfc96a6c1f741b00f2169659006ec53"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/cps/Descriptor.kt",
      "language": "kotlin",
      "line": 72,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 70,
        "length": 6,
        "offset": 3,
        "surroundingCode": "}\n\nactual fun getDescriptor(): String {\n\n  return runBlocking {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e85fade47e90fae1a9293390fe70fc1e46839acbe82d560f0d7facd00fcd7cdd"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/desktopMain/kotlin/xyz/mcxross/cohesive/designsystem/mellow/Resources.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 7,
        "length": 6,
        "offset": 13,
        "surroundingCode": "\n@Composable\nactual fun Font(name: String, res: String, weight: FontWeight, style: FontStyle): Font =\n  androidx.compose.ui.text.platform.Font(\"font/$res.ttf\", weight, style)\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.desktopMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "e3809b14d4e5b1965fd90f53c80b5394d360c7ec5f7c8265eb9c4e06615d9983"
},{
  "tool": "Code Inspection",
  "category": "General",
  "type": "Kotlin annotator",
  "tags": [
    "Sanity"
  ],
  "severity": "Critical",
  "comment": "The feature \"multi platform projects\" is experimental and should be enabled explicitly",
  "detailsInfo": "Allows viewing the problems reported by the Kotlin annotator: compilation problems, references unresolved by the IDE, and so on.",
  "sources": [
    {
      "type": "file",
      "path": "cmpe/common/src/commonMain/kotlin/xyz/mcxross/cohesive/utils/IO.kt",
      "language": "kotlin",
      "line": 3,
      "offset": 1,
      "length": 6,
      "code": {
        "startLine": 1,
        "length": 6,
        "offset": 36,
        "surroundingCode": "package xyz.mcxross.cohesive.utils\n\nexpect fun readFileToStr(path: String): String\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.cmpe.common.commonMain",
    "inspectionName": "KotlinAnnotator"
  },
  "hash": "757360160dfc7da9505921383da1a8d00aa67b884ad66a5ad53b6e5c0b36bebf"
}]}