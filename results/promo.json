{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'StatusBar' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/StatusBar.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 5,
      "length": 9,
      "code": {
        "startLine": 8,
        "length": 9,
        "offset": 17,
        "surroundingCode": "\n@Composable\nfun StatusBar(\n    content: @Composable (RowScope.() -> Unit),\n) = Box("
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "4c49f093f792128d99661a2a0f734ea064c2798d82fe5f95341315b1083dd5b8"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'App' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/App.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 5,
      "length": 3,
      "code": {
        "startLine": 5,
        "length": 3,
        "offset": 17,
        "surroundingCode": "\n@Composable\nfun App() {\n\n    Text(\"Cohesive\")"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "3528f681809305f3a546297c6db94e78e7c02cb4080fdfc71b5326990a836a67"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'Button' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/Button.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 5,
      "length": 6,
      "code": {
        "startLine": 19,
        "length": 6,
        "offset": 17,
        "surroundingCode": "\n@Composable\nfun Button(\n    onClick: () -> Unit,\n    modifier: Modifier = Modifier,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "bed73133263bfbec6293f0cfa5d70fbaa4f98b5fa03307746bbf9feec3332443"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'OutlinedButton' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/Button.kt",
      "language": "kotlin",
      "line": 72,
      "offset": 5,
      "length": 14,
      "code": {
        "startLine": 70,
        "length": 14,
        "offset": 17,
        "surroundingCode": "\n@Composable\nfun OutlinedButton(\n    onClick: () -> Unit,\n    modifier: Modifier = Modifier,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "500646af72b160dc3b6b7df2e1799cefbba95a27ec9d421945c6f118c0a0166c"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'Explorer' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/desktopMain/kotlin/com/mcxross/cohesive/common/frontend/ui/view/explorer/Explorer.kt",
      "language": "kotlin",
      "line": 18,
      "offset": 12,
      "length": 8,
      "code": {
        "startLine": 16,
        "length": 8,
        "offset": 24,
        "surroundingCode": "\n@Composable\nactual fun Explorer() {\n\n    Box(Modifier.fillMaxSize().background(MaterialTheme.colors.background)) {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.desktopMain",
    "inspectionName": "FunctionName"
  },
  "hash": "6a9af84bfb1a9796806154e1b7bbefc30e950fe4ea08b9deb9f86e5669b632a3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused import directive",
  "severity": "High",
  "comment": "Unused import directive",
  "detailsInfo": "Reports redundant `import` statements.\n\nDefault and unused imports can be safely removed.\n\n**Example:**\n\n\n      import kotlin.*\n      import kotlin.collections.*\n      import kotlin.comparisons.*\n      import kotlin.io.*\n      import kotlin.ranges.*\n      import kotlin.sequences.*\n      import kotlin.text.*\n\n      // jvm specific\n      import java.lang.*\n      import kotlin.jvm.*\n\n      // js specific\n      import kotlin.js.*\n\n      import java.io.* // this import is unused and could be removed\n      import java.util.*\n\n      fun foo(list: ArrayList<String>) {\n          list.add(\"\")\n      }\n",
  "sources": [
    {
      "type": "file",
      "path": "common/src/desktopMain/kotlin/com/mcxross/cohesive/common/frontend/openapi/ui/UI.kt",
      "language": "kotlin",
      "line": 4,
      "offset": 1,
      "length": 45,
      "code": {
        "startLine": 2,
        "length": 45,
        "offset": 44,
        "surroundingCode": "\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.window.WindowScope\n\ninterface UI {"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.desktopMain",
    "inspectionName": "KotlinUnusedImport"
  },
  "hash": "97a5b3c265ef4c3b6615d2208c290a5ec2f8e5dc9dd4bf763fcfa339524ecca4"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Property 'backgroundWhite' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/MellowTheme.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 13,
      "length": 15,
      "code": {
        "startLine": 41,
        "length": 15,
        "offset": 23,
        "surroundingCode": "        )\n\n        val backgroundWhite: Color = Color(0xFFFFFFFF)\n        val backgroundWhiteMedium: Color = Color(0xFFF2F2F2)\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "6357beadb2b9872a1569be2720aa7821061d1f3b6cb5ae017419e0b0e19f2838"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Property 'backgroundWhiteMedium' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/MellowTheme.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 13,
      "length": 21,
      "code": {
        "startLine": 42,
        "length": 21,
        "offset": 68,
        "surroundingCode": "\n        val backgroundWhite: Color = Color(0xFFFFFFFF)\n        val backgroundWhiteMedium: Color = Color(0xFFF2F2F2)\n\n        val materialWhite: androidx.compose.material.Colors = lightColors("
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "7e11f745b975ecd5c9676ebe8a7f4c7558f389b5c22c9630dddc47b8d369da7e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"MinFontSize\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/EditorComposite.kt",
      "language": "kotlin",
      "line": 15,
      "offset": 13,
      "length": 11,
      "code": {
        "startLine": 13,
        "length": 11,
        "offset": 48,
        "surroundingCode": "import androidx.compose.ui.unit.sp\n\nprivate val MinFontSize = 6.sp\nprivate val MaxFontSize = 40.sp\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "bd704ea28ba93bf6d87a4b322610466d84136cbff47617d4503c1cf4702fa0ad"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Property \"MaxFontSize\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/EditorComposite.kt",
      "language": "kotlin",
      "line": 16,
      "offset": 13,
      "length": 11,
      "code": {
        "startLine": 14,
        "length": 11,
        "offset": 44,
        "surroundingCode": "\nprivate val MinFontSize = 6.sp\nprivate val MaxFontSize = 40.sp\n\nprivate operator fun TextUnit.minus(other: TextUnit) = (value - other.value).sp"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4048f5dd62f8a84f056fde35468c77a717bd32b621f94fbe37ccf8e91e4c7277"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"scale\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com.mcxross.cohesive.mellow/EditorComposite.kt",
      "language": "kotlin",
      "line": 21,
      "offset": 21,
      "length": 5,
      "code": {
        "startLine": 19,
        "length": 5,
        "offset": 94,
        "surroundingCode": "private operator fun TextUnit.div(other: TextUnit) = value / other.value\n\nprivate fun Density.scale(scale: Float) = Density(density * scale, fontScale * scale)\n\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4b2c9a43ff1cec63baba6ebf98349baf28e685f478e6b110d4a7a1ef67a55715"
}]}