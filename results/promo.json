{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'VerticalScrollbar' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/desktopMain/kotlin/com/mcxross/cohesive/common/ui/view/editor/platform/Scrollbar.kt",
      "language": "kotlin",
      "line": 19,
      "offset": 12,
      "length": 17,
      "code": {
        "startLine": 17,
        "length": 17,
        "offset": 24,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n    modifier: Modifier,\n    scrollState: LazyListState"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.desktopMain",
    "inspectionName": "FunctionName"
  },
  "hash": "ae721ce7252ad457e3d7842a7ce4812c68471a64398b9abadd3cf6d3c50df491"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'VerticalScrollbar' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/desktopMain/kotlin/com/mcxross/cohesive/common/ui/view/editor/platform/Scrollbar.kt",
      "language": "kotlin",
      "line": 10,
      "offset": 12,
      "length": 17,
      "code": {
        "startLine": 8,
        "length": 17,
        "offset": 24,
        "surroundingCode": "\n@Composable\nactual fun VerticalScrollbar(\n    modifier: Modifier,\n    scrollState: ScrollState"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.desktopMain",
    "inspectionName": "FunctionName"
  },
  "hash": "3aafb22fb7d7228136b08f93d06886ece9b7cace664e8c64044abb82afe7fae7"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'CodeViewerView' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/ui/view/editor/EditorView.kt",
      "language": "kotlin",
      "line": 26,
      "offset": 5,
      "length": 14,
      "code": {
        "startLine": 24,
        "length": 14,
        "offset": 17,
        "surroundingCode": "\n@Composable\nfun CodeViewerView(model: CodeViewer) {\n    val panelState = remember { PanelState() }\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "186929b7f31d87e6e3af9a9292ed09e0edc3b9ba73110a8857a3b03736724779"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'ResizablePanel' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/ui/view/editor/EditorView.kt",
      "language": "kotlin",
      "line": 78,
      "offset": 13,
      "length": 14,
      "code": {
        "startLine": 76,
        "length": 14,
        "offset": 25,
        "surroundingCode": "\n@Composable\nprivate fun ResizablePanel(\n    modifier: Modifier,\n    state: PanelState,"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "11365d6c0a3ca91620cb431f2261e25718cc37842fbc0f91e7f199c505f39856"
},{
  "tool": "Code Inspection",
  "category": "Naming conventions",
  "type": "Function naming convention",
  "severity": "Moderate",
  "comment": "Function name 'Explorer' should start with a lowercase letter",
  "detailsInfo": "Reports function names that do not follow the recommended naming conventions.\n\n**Example:**\n\n\n      fun Foo() {}\n\nTo fix the problem change the name of the function to match the recommended naming conventions.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/ui/view/explorer/Explorer.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 12,
      "length": 8,
      "code": {
        "startLine": 5,
        "length": 8,
        "offset": 24,
        "surroundingCode": "\n@Composable\nexpect fun Explorer()"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "FunctionName"
  },
  "hash": "b046a19669459b7f368f6222eeb6a9a45fdd54e46402811d42bc012ed28445ef"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Redundant 'Unit' return type",
  "severity": "High",
  "comment": "Redundant 'Unit' return type",
  "detailsInfo": "Reports a redundant `Unit` return type which can be omitted.",
  "sources": [
    {
      "type": "file",
      "path": "common/src/desktopMain/kotlin/com/mcxross/cohesive/common/ui/component/CMenu.kt",
      "language": "kotlin",
      "line": 131,
      "offset": 20,
      "length": 4,
      "code": {
        "startLine": 129,
        "length": 4,
        "offset": 21,
        "surroundingCode": "\n\n    fun onClick(): Unit {\n        cMenuInterface?.onClick()\n    }"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.desktopMain",
    "inspectionName": "RedundantUnitReturnType"
  },
  "hash": "d963558d6c828ea0c66cc708d2ff665d99b00c95f91f32f098e01730ea6bd57e"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Property 'backgroundWhite' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/ui/theme/Theme.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 13,
      "length": 15,
      "code": {
        "startLine": 40,
        "length": 15,
        "offset": 23,
        "surroundingCode": "        )\n\n        val backgroundWhite: Color = Color(0xFFFFFFFF)\n        val backgroundWhiteMedium: Color = Color(0xFFF2F2F2)\n"
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "161dd370ffdbdd561c3265bdc83fc017725e33897fcc1f87c00eeaf5d7ccceea"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Info",
  "comment": "Property 'backgroundWhiteMedium' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "common/src/commonMain/kotlin/com/mcxross/cohesive/common/ui/theme/Theme.kt",
      "language": "kotlin",
      "line": 43,
      "offset": 13,
      "length": 21,
      "code": {
        "startLine": 41,
        "length": 21,
        "offset": 68,
        "surroundingCode": "\n        val backgroundWhite: Color = Color(0xFFFFFFFF)\n        val backgroundWhiteMedium: Color = Color(0xFFF2F2F2)\n\n        val materialWhite: androidx.compose.material.Colors = lightColors("
      }
    }
  ],
  "attributes": {
    "module": "cohesive.common.commonMain",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "c7f1909af8703f0b30dbcf4eb492aed192fce8964201368a15710672ea6cad18"
}]}